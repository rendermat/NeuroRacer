// Generated by gencpp from file number_sensor/NumberPredictor.msg
// DO NOT EDIT!


#ifndef NUMBER_SENSOR_MESSAGE_NUMBERPREDICTOR_H
#define NUMBER_SENSOR_MESSAGE_NUMBERPREDICTOR_H

#include <ros/service_traits.h>


#include <number_sensor/NumberPredictorRequest.h>
#include <number_sensor/NumberPredictorResponse.h>


namespace number_sensor
{

struct NumberPredictor
{

typedef NumberPredictorRequest Request;
typedef NumberPredictorResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct NumberPredictor
} // namespace number_sensor


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::number_sensor::NumberPredictor > {
  static const char* value()
  {
    return "b275fc781a7750fca95a098877b3f1f6";
  }

  static const char* value(const ::number_sensor::NumberPredictor&) { return value(); }
};

template<>
struct DataType< ::number_sensor::NumberPredictor > {
  static const char* value()
  {
    return "number_sensor/NumberPredictor";
  }

  static const char* value(const ::number_sensor::NumberPredictor&) { return value(); }
};


// service_traits::MD5Sum< ::number_sensor::NumberPredictorRequest> should match 
// service_traits::MD5Sum< ::number_sensor::NumberPredictor > 
template<>
struct MD5Sum< ::number_sensor::NumberPredictorRequest>
{
  static const char* value()
  {
    return MD5Sum< ::number_sensor::NumberPredictor >::value();
  }
  static const char* value(const ::number_sensor::NumberPredictorRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::number_sensor::NumberPredictorRequest> should match 
// service_traits::DataType< ::number_sensor::NumberPredictor > 
template<>
struct DataType< ::number_sensor::NumberPredictorRequest>
{
  static const char* value()
  {
    return DataType< ::number_sensor::NumberPredictor >::value();
  }
  static const char* value(const ::number_sensor::NumberPredictorRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::number_sensor::NumberPredictorResponse> should match 
// service_traits::MD5Sum< ::number_sensor::NumberPredictor > 
template<>
struct MD5Sum< ::number_sensor::NumberPredictorResponse>
{
  static const char* value()
  {
    return MD5Sum< ::number_sensor::NumberPredictor >::value();
  }
  static const char* value(const ::number_sensor::NumberPredictorResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::number_sensor::NumberPredictorResponse> should match 
// service_traits::DataType< ::number_sensor::NumberPredictor > 
template<>
struct DataType< ::number_sensor::NumberPredictorResponse>
{
  static const char* value()
  {
    return DataType< ::number_sensor::NumberPredictor >::value();
  }
  static const char* value(const ::number_sensor::NumberPredictorResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // NUMBER_SENSOR_MESSAGE_NUMBERPREDICTOR_H
